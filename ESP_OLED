/**
   BasicHTTPClient.ino

    Created on: 24.05.2015

*/

#include <Arduino.h>

#include <ESP8266WiFi.h>
#include <ESP8266WiFiMulti.h>

#include <ESP8266HTTPClient.h>

#include <WiFiClient.h>

ESP8266WiFiMulti WiFiMulti;

#include <Wire.h>
#include "OLED.h"


OLED display(2, 14);

void setup() {

  pinMode(4, OUTPUT);
  digitalWrite(4, LOW);   // turn D2 low to reset OLED
  delay(50);
  digitalWrite(4, HIGH);    // while OLED is running, must set D2 in high

  // Initialize display
  display.begin();

  // Test message
  display.print("Hello ESP");
  delay(3 * 1000);

  Serial.begin(115200);
  // Serial.setDebugOutput(true);

  Serial.println();
  Serial.println();
  Serial.println();

  for (uint8_t t = 4; t > 0; t--) {
    Serial.printf("[SETUP] WAIT %d...\n", t);
    Serial.flush();
    delay(1000);
  }

  WiFi.mode(WIFI_STA);
  //  WiFiMulti.addAP("Alien", "HetRegentSamenOpStap1917");
  WiFiMulti.addAP("FashionTechFarm_Guest", "connect your dress here");
}

void loop() {
  // wait for WiFi connection
  if ((WiFiMulti.run() == WL_CONNECTED)) {

    WiFiClient client;

    HTTPClient http;

    Serial.print("[HTTP] begin...\n");
    if (http.begin(client, "http://contrechoc.com/index.html")) {  // HTTP


      Serial.print("[HTTP] GET...\n");
      // start connection and send HTTP header
      int httpCode = http.GET();

      // httpCode will be negative on error
      if (httpCode > 0) {
        // HTTP header has been send and Server response header has been handled
        Serial.printf("[HTTP] GET... code: %d\n", httpCode);

        // file found at server
        if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) {
          String payload = http.getString();
          Serial.println(payload);
          int h = payload.length();
          int lengthDisplay = 18;
          for (int i = 0; i < h - 80; i += 80)
          {
            //c language pointer stuff - String Char Arrary conversions, use of a buffer
            char buf[20] = "                   ";
            String k0 = payload.substring(i, i + lengthDisplay);
            k0.toCharArray(buf, 20);
            display.print(buf, 0, 0);
            String k1 = payload.substring(i + lengthDisplay, i + 2*lengthDisplay);
            k1.toCharArray(buf, 20);
            display.print(buf, 1, 0);
            String k2 = payload.substring(i + 2*lengthDisplay, i + 3*lengthDisplay);
            k2.toCharArray(buf, 20);
            display.print(buf, 2, 0);
            String k3 = payload.substring(i + 3*lengthDisplay, i + 4*lengthDisplay);
            k3.toCharArray(buf, 20);
            display.print(buf, 3, 0);
            delay(1000);
          }
          
        }
      } else {
        Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
      }

      http.end();
    } else {
      Serial.printf("[HTTP} Unable to connect\n");
    }
  }

  delay(10000);
}
