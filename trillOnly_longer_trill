//only tril

int trilfactor = 20;//trilfactor wordt gedeeld door 10, dus als trilfactor = 20, tweemaal zo lang

int h = 0;

int timeCounter;
int hhh;
int counter = 0;

int longAfter = 0;

int trackNumber = 0;
static unsigned long timer = millis();
static unsigned long timer2 = millis();
static unsigned long timer3 = millis();
static unsigned long timer4 = millis();

boolean upper = 0;
int divider = 1;

int myNumber = 44;

void setup() {

  
  

Serial.begin(115200);
  // put your setup code here, to run once:
    for (int i = 2; i < 11; i++)
    pinMode(i, OUTPUT);
    randomSeed(analogRead(5));
    h = random(0, 3);
 
      if ( h == 0)
      {
        trackNumber = 1;
  
      } else  if ( h == 1)
      {
        trackNumber = 2;
  
      } if ( h == 2)
      {
        trackNumber = 3;

      }

      Serial.println(trackNumber);
     
}

void randomizer(){

  randomSeed(analogRead(5));
    h = random(0, 3);
 
      if ( h == 0)
      {
        trackNumber = 1;
  
      } else  if ( h == 1)
      {
        trackNumber = 2;
  
      } if ( h == 2)
      {
        trackNumber = 3;

      }
  Serial.println("randomizer");
      Serial.println(trackNumber);

  myNumber = 10 + random(0,250);
}

void loop() {
  // put your main code here, to run repeatedly:
   vibrationWithTrack();
   if ( (longAfter++)%300 > myNumber)
   {
    randomizer();
   }
}

void vibrationWithTrack() {
  if ( trackNumber == 1) //real soundTrack 4 - welcoming and checking soundfile
  {
    track3(); //track0 behavior
    delay(random(1000));
  }
  else if ( trackNumber == 2)
  {
    track2(); //track0 behavior
      delay(random(1000));
  }
  else if ( trackNumber == 3)
  {
    track1(); //track0 behavior
      delay(random(1000));
    // Serial.println("no vibration");
  }
  else if ( trackNumber == 4)
  {
    track0();
  }
}

void track0() {
  Serial.println("track0");

  if (timer2 < micros()) {
    hhh =  1000000 / 3 ;
    timer = micros() + hhh;
    if ( upper == 1)
    {
      getVibe4(10, 9, 8, 7, 100, 0);
    }
    else
    {
      getVibe4(2, 3, 4, 5, 100, 0);
    }
    timer2 = micros() + 298300 / divider ;
  }

  if (timer3 < micros()) {
    hhh =  1058823 / 3  ;
    timer3 = micros() + hhh;
    getVibe(6, 100, 0);
  }

  if (timer4 < micros()) {
    hhh =  1000000 / 3 ;
    timer4 = micros() + hhh;
    counter++;
    if ( counter % 17 == 0)
    {
      for (int i = 0; i < 20; i++)
      {
        getVibe2(9, 3, 100, 0);
      }
      for (int i = 0; i < 2; i++)
      {
        getVibe2(8, 4, 100, 0);
      }
      for (int i = 0; i < 20; i++)
      {
        getVibe2(5, 7, 100, 0);
      }
    }
  }

  if (random(0, 8) == 0)
    upper = !upper;
    
  int k = random(0, 24);
  if (k == 0)
    getVibe6(6, 7, 8, 9, 3, 4, 300, 0);
  if ( random(0,5)==2) randomizer();
}

void track1() {
  Serial.println("track1");
  if (timer2 < micros()) {
    hhh =  (1.05 + sin( millis() / 3000 )) * 2100000 / 6 ;
    timer2 = micros() + hhh;
    getVibe2(2, 10, 250, 0);
  }
  if (timer3 < micros()) {
    hhh =  21000000 / 6 ;
    timer3 = micros() + hhh;
    getVibe2(3, 9, 250, 0);
  }

  //if ((counter++) % 25 == 0)
   // getVibe6(6, 7, 8, 9, 3, 4, 300, 0);

   if ( random(0,5)==2) randomizer();
}

void track2() {
  Serial.println("track2");//real track 1
  if (timer3 < micros()) {
    hhh =  random(1000000) ;
    timer3 = micros() + hhh;
    randomVibe(  random(1, 5), 500);
  }

  if (timer2 < micros()) {
    hhh = 500000 +  random(500000) ;
    timer2 = micros() + hhh;
    randomVibe(  random(1, 3), 200);
  }

 // if ((counter++) % 12 == 0)
   // getVibe6(6, 7, 8, 9, 3, 4, 300, 0);
  if ( random(0,5)==2) randomizer();
}

void track3() { //welcoming track
  Serial.println("track-welcome");
  getVibe2(2, 10, 250, 0);
  getVibe2(3, 9, 250, 0);
  getVibe2(4, 8, 250, 0);
  getVibe2(5, 7, 250, 0);
  getVibe(6, 250, 0);
  getVibe(6, 250, 0);
  delay(random(2000)+200);
  if ( random(0,5)==2) randomizer();
}


//-------------------soundPatterns-----------------------

void triller(int which) {
  digitalWrite(which, HIGH);   // turn the LED on (HIGH is the voltage level)
  digitalWrite(which + 1, HIGH);
  delay(5);                       // wait for a second
  digitalWrite(which, LOW);    // turn the LED off by making the voltage LOW
  digitalWrite(which + 1, LOW);
  delay(50);                       // wait for a second
}

void TrilAll() {
  for (int i = 2; i < 10; i++)
    digitalWrite(i, HIGH);

  delay(100);
  for (int i = 2; i < 10; i++)
    digitalWrite(i, LOW);
}

void getVibe(int whichPIN, int whichLength, int addDelay) {
whichLength = whichLength * trilfactor/10; 
  digitalWrite(whichPIN, HIGH);
  delay(whichLength);
  digitalWrite(whichPIN, LOW);
  if ( addDelay == 1)
    delay(whichLength);
}

void getVibe2(int whichPIN1, int whichPIN2, int whichLength, int addDelay) {
whichLength = whichLength * trilfactor/10; 
  digitalWrite(whichPIN1, HIGH);
  digitalWrite(whichPIN2, HIGH);
  delay(whichLength);
  digitalWrite(whichPIN1, LOW);
  digitalWrite(whichPIN2, LOW);
  if ( addDelay == 1)
    delay(whichLength);
}

void getVibe4(int whichPIN1, int whichPIN2, int whichPIN3, int whichPIN4, int whichLength, int addDelay) {
whichLength = whichLength * trilfactor/10; 
  digitalWrite(whichPIN1, HIGH);
  digitalWrite(whichPIN2, HIGH);
  digitalWrite(whichPIN3, HIGH);
  digitalWrite(whichPIN4, HIGH);
  delay(whichLength);
  digitalWrite(whichPIN1, LOW);
  digitalWrite(whichPIN2, LOW);
  digitalWrite(whichPIN3, LOW);
  digitalWrite(whichPIN4, LOW);
  if ( addDelay == 1)
    delay(whichLength);
}

void getVibe5(int whichPIN1, int whichPIN2, int whichPIN3, int whichPIN4, int whichPIN5, int whichLength, int addDelay) {
whichLength = whichLength * trilfactor/10;
  digitalWrite(whichPIN1, HIGH);
  digitalWrite(whichPIN2, HIGH);
  digitalWrite(whichPIN3, HIGH);
  digitalWrite(whichPIN4, HIGH);
  digitalWrite(whichPIN5, HIGH);
  delay(whichLength);
  digitalWrite(whichPIN1, LOW);
  digitalWrite(whichPIN2, LOW);
  digitalWrite(whichPIN3, LOW);
  digitalWrite(whichPIN4, LOW);
  digitalWrite(whichPIN5, LOW);
  if ( addDelay == 1)
    delay(whichLength);
}

void getVibe6(int whichPIN1, int whichPIN2, int whichPIN3, int whichPIN4, int whichPIN5, int whichPIN6, int whichLength, int addDelay) {
whichLength = whichLength * trilfactor/10; 
  digitalWrite(whichPIN1, HIGH);
  digitalWrite(whichPIN2, HIGH);
  digitalWrite(whichPIN3, HIGH);
  digitalWrite(whichPIN4, HIGH);
  digitalWrite(whichPIN5, HIGH);
  digitalWrite(whichPIN6, HIGH);
  delay(whichLength);
  digitalWrite(whichPIN1, LOW);
  digitalWrite(whichPIN2, LOW);
  digitalWrite(whichPIN3, LOW);
  digitalWrite(whichPIN4, LOW);
  digitalWrite(whichPIN5, LOW);
  digitalWrite(whichPIN6, LOW);
  if ( addDelay == 1)
    delay(whichLength);
}

void roundSound(int whichSpeed, int whichDir, int whichLength) {
  if ( whichDir == 0 )
  {
    for (int i = 2; i < 11; i++)
      getVibe( i, whichLength, 0);
    delay(whichSpeed);
  }
  else if ( whichDir == 1 )
  {
    for (int i = 10; i > 1; i--)
      getVibe( i, whichLength, 0);
    delay(whichSpeed);
  }
}

void upDownSound(  int whichDir, int whichLength) {
  if ( whichDir == 0 )
  {
    getVibe2(5, 7, whichLength, 0);
    getVibe2(4, 8, whichLength, 0);
    getVibe( 6, whichLength, 0);
    getVibe2(3, 9, whichLength, 0);
    getVibe2(2, 10, whichLength, 0);
  }
  else if ( whichDir == 1 )
  {
    getVibe2(2, 10, whichLength, 0);
    getVibe2(3, 9, whichLength, 0);
    getVibe( 6, whichLength, 0);
    getVibe2(4, 8, whichLength, 0);
    getVibe2(5, 7, whichLength, 0);
  }
}

void leftRight(  int whichDir, int whichLength) {
  if ( whichDir == 0 )
  {
    getVibe( 2, whichLength, 0);
    getVibe2(3, 4, whichLength, 0);
    getVibe( 5, whichLength, 0);
    getVibe( 6, whichLength, 0);
    getVibe( 7, whichLength, 0);
    getVibe2(8, 9, whichLength, 0);
    getVibe( 10, whichLength, 0);
  }
  else if ( whichDir == 1 )
  {
    getVibe( 10, whichLength, 0);
    getVibe2(8, 9, whichLength, 0);
    getVibe( 7, whichLength, 0);
    getVibe( 6, whichLength, 0);
    getVibe( 5, whichLength, 0);
    getVibe2(3, 4, whichLength, 0);
    getVibe( 2, whichLength, 0);
  }
}

void randomVibe(  int howMany, int whichLength) {
  for (int i = 0; i < howMany; i++)
  {
    getVibe( i, whichLength, 0);
  }
}

void EXINplosion( int whichDir, int whichLength) {
  if ( whichDir == 0 )
  {
    getVibe( 6, whichLength, 0);
    getVibe4( 3, 4, 9, 8, whichLength, 0);
    getVibe4( 2, 5, 7, 10, whichLength, 0);
  }
  else if ( whichDir == 1 )
  {
    getVibe4( 2, 5, 7, 10, whichLength, 0);
    getVibe4( 3, 4, 9, 8, whichLength, 0);
    getVibe( 6, whichLength, 0);
  }
}

void pathVibe( int whichDir, int whichLength) {
  if ( whichDir == 0 )
  {
    getVibe( 2, whichLength, 1);
    getVibe( 3, whichLength, 1);
    getVibe( 6, whichLength, 1);
    getVibe( 8, whichLength, 1);
    getVibe( 7, whichLength, 1);
    getVibe( 5, whichLength, 1);
    getVibe( 6, whichLength, 1);
    getVibe( 9, whichLength, 1);
    getVibe( 10, whichLength, 1);
  }
  else if ( whichDir == 1 )
  {
    getVibe( 10, whichLength, 1);
    getVibe( 9, whichLength, 1);
    getVibe( 6, whichLength, 1);
    getVibe( 5, whichLength, 1);
    getVibe( 7, whichLength, 1);
    getVibe( 8, whichLength, 1);
    getVibe( 6, whichLength, 1);
    getVibe( 3, whichLength, 1);
    getVibe( 2, whichLength, 1);
  }
}

void pattern(int whichDir, int whichLength) {
  if ( whichDir == 0 )
  {
    getVibe5( 3, 4, 6, 9, 8, whichLength, 0);
    getVibe4( 2, 10, 5, 7, whichLength, 0);
  }
  else if ( whichDir == 1 )
  {
    getVibe4( 2, 10, 5, 7, whichLength, 0);
    getVibe5( 3, 4, 6, 9, 8, whichLength, 0);
  }
}
